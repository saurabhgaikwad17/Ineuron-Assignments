CREATE database accidents;

CREATE TABLE accident(
	accident_index VARCHAR(13),
    accident_severity INT
);

CREATE TABLE vehicles(
	accident_index VARCHAR(13),
    vehicle_type VARCHAR(50)
);

/* First: for vehicle types, create new csv by extracting data from Vehicle Type sheet from Road-Accident-Safety-Data-Guide.xls */
CREATE or replace TABLE vehicle_types(
	vehicle_code INT,
    vehicle_type VARCHAR
);


-- Load selected columns from s3 staging

list @accidents;

copy into accident from 
(select $1, $7 from @accidents)
file_format=(type=csv field_delimiter=',' skip_header=1)
purge=false;

select * from accident;

list @vehicles;

copy into vehicles from 
(select $1, $3 from @vehicles)
file_format=(type=csv field_delimiter=',' skip_header=1)
purge=false;

select * from vehicles;


list @vehicle_types;

copy into vehicle_types from @vehicle_types
file_format=(type=csv field_delimiter=',' skip_header=1)
purge=false;

select * from vehicle_types;

-- Task-1.1
select vt.vehicle_type as vehicle_type, median(a.accident_severity) as median_severity from
accident a
join vehicles v on a.accident_index=v.accident_index
join vehicle_types vt on v.vehicle_type=vt.vehicle_code
where vt.vehicle_type like '%orcycle%'
group by vt.vehicle_type;

-- Task-1.2
select vt.vehicle_type as vehicle_type, a.accident_severity as accident_severity, count(vt.vehicle_type) as no_of_accidents from
accident a
join vehicles v on a.accident_index=v.accident_index
join vehicle_types vt on v.vehicle_type=vt.vehicle_code
group by 1,2
order by 2,3;

-- Task-1.3
select vt.vehicle_type as vehicle_type, avg(a.accident_severity) as average_accident_severity from
accident a
join vehicles v on a.accident_index=v.accident_index
join vehicle_types vt on v.vehicle_type=vt.vehicle_code
group by 1;

-- Task-1.4
select vt.vehicle_type as vehicle_type, avg(a.accident_severity) as average_severity, count(vt.vehicle_type) as no_of_accidents from
accident a
join vehicles v on a.accident_index=v.accident_index
join vehicle_types vt on v.vehicle_type=vt.vehicle_code
where vt.vehicle_type like '%orcycle%'
group by vt.vehicle_type;


-- Task-2.1
CREATE DATABASE CIA_WORLD_FACTBOOK;
USE CIA_WORLD_FACTBOOK;

CREATE OR REPLACE TABLE facts (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  code varchar(255) NOT NULL,
  name varchar(255) NOT NULL,
  area integer,
  area_land integer,
  area_water integer,
  population integer,
  population_growth float,
  birth_rate float,
  death_rate float,
  migration_rate float
);

ALTER FILE FORMAT "CIA_WORLD_FACTBOOK"."PUBLIC".CSV_NEW
SET COMPRESSION = 'AUTO' FIELD_DELIMITER = ',' RECORD_DELIMITER = '\n'
SKIP_HEADER = 1 FIELD_OPTIONALLY_ENCLOSED_BY = '\042'
TRIM_SPACE = TRUE ERROR_ON_COLUMN_COUNT_MISMATCH = TRUE ESCAPE = 'NONE'
ESCAPE_UNENCLOSED_FIELD = '\134' DATE_FORMAT = 'AUTO' TIMESTAMP_FORMAT = 'AUTO' NULL_IF = ('None');

SELECT * FROM FACTS;

select name from facts
where population = (select max(population) from facts where name <> 'World');

-- Task- 2.2
select name from facts
where population = (select min(population) from facts);

-- Task- 2.3
select name from facts
where population_growth = (select max(population_growth) from facts);

-- Task- 2.4
select name from facts
where population_growth = (select min(population_growth) from facts);

-- Task- 2.5
select name from facts
where area_land>0 and (population/area_land) = (
select max(population/area_land) from facts where area_land>0);